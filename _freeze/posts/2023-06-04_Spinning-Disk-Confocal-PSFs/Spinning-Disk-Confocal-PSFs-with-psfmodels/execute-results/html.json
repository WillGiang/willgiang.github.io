{
  "hash": "780e45a3bfec250579364c8bac4443d1",
  "result": {
    "markdown": "---\ntitle: Spinning Disk Confocal PSFs with PSFmodels\nauthor: William Giang\ndate: '2023-06-04'\ncategories:\n  - Python\n  - PSF\n  - spinning-disk-confocal\ntoc: true\nnumber-sections: false\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n    html-math-method: katex\n  pdf:\n    geometry:\n      - top=30mm\n      - left=20mm\n  docx: default\n---\n\n## Motivation\nObtaining an accurate point spread function (PSF) is vital for good deconvolution.\n\nHere's how to obtain the `pinhole_au` parameter for generating a [confocal PSF](https://github.com/tlambert03/PSFmodels/blob/a7815b2d256bca501aff674e059dc9685631b942/src/psfmodels/_core.py#L575) in [Talley Lambert's PSFmodels](https://github.com/tlambert03/PSFmodels).\n\n\n## Theory\nA measure of confocality (in Airy units) is the ratio between the back projected pinhole radius and the radius of the Airy disk.\n\nSince the back projected pinhole radius ($R_{BP}$) is the size of the pinhole radius projected on the sample plane, it can be calculated with the pinhole radius ($R_{PR}$) divided by the total magnification between the pinhole(s) and the sample, which includes the objective's magnification ($M_{O}$) and other potential sources of intermediate magnification ($M_{I}$)\n\n$$ R_{BP} = {R_{PR} \\over M_{O} * M_{I}} $$\n\nThe radius of an Airy disk ($R_{A}$) is equivalent to Rayleigh's lateral resolution criterion which is the product of 0.61 and wavelength ($\\lambda$) divided by the numerical aperture ($NA$)\n\n$$ R_{A} = 0.61 {\\lambda \\over NA } $$\n\n\n## Confocality with Yokogawa CSU-X1\nWith a physical pinhole radius of 25 microns, the Yokogawa CSU-X1 spinning disk unit is optimized for high resolution live-cell imaging, so we should expect a smaller confocality value when imaging with a high resolution objective than with a lower resolution objective.\n\nLet's compare the confocality between two objectives (100x/1.49 and 20x/0.75) when imaging EGFP (emission peak wavelength at 509nm).\n\n| Objective Mag | Objective NA | $\\lambda$ (um) | Back Projected Pinhole Radius (um) | Airy Disk Radius (um) | Confocality (Airy units) |\n| -------- | --- | ----------- | ---------------------------------- | --------------------- | ----------- |\n| 20x | 0.75 | 0.509        | 1.25                               | 0.414                 | 3           |\n| 100x | 1.49 | 0.509        | 0.166                              | 0.208                 | 1.2         |\n\n::: {.cell tags='[\"hide-input\"]' execution_count=1}\n``` {.python .cell-code}\nimport psfmodels as psfm\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import PowerNorm\n\ndef backProjectedPinholeRadius(PinholeRadius, MagObjective, MagIntermediate=1):\n    \"\"\"\n    Return the back projected pinhole radius for a spinning disk confocal unit.\n    \n    Parameters\n    ----------\n    PinholeRadius : float\n        Physical radius of the pinhole\n    MagObjective : int\n        Magnification of the objective\n    MagIntermediate : float\n        Other magnification between the spinning disk and sample\n        \n    Returns\n    -------\n    float\n        The `pinholeRadius` divided by both `MagObjective` and `MagIntermediate`\n    \n    Examples\n    --------\n    >>> backProjectedPinholeRadius(25, 100)\n    0.25\n    >>> backProjectedPinholeRadius(25, 100, 1.5)\n    0.16666666666666666\n    \"\"\"\n    return PinholeRadius / (MagObjective*MagIntermediate)\n\ndef airyDiskRadius(wavelength, NA):\n    \"\"\"\n    Return the radius of an Airy Disk given a wavelength and numerical aperture.\n    \n    Parameters\n    ----------\n    wavelength : float\n        Wavelength\n    NA : float\n        Numerical aperture of the objective\n    \n    Returns\n    -------\n    float\n        0.61 multiplied by `wavelength` and divided by `NA`\n        \n    Examples\n    --------\n    >>> airyDiskRadius(509, 1.49)\n    208.38\n    >>> airyDiskRadius(509, 0.75)\n    413.99\n    \"\"\"\n    return 0.61 * wavelength / NA\n\ndef confocality(BackProjectedPinholeRadius, AiryDiskRadius):\n    \"\"\"\n    Return the confocality (in Airy Units) for a spinning disk confocal\n    \n    Parameters\n    ----------\n    BackProjectedPinholeRadius : float\n        The pinhole radius projected on the sample plane\n    AiryDiskRadius : float\n        The radius of an Airy Disk (also equivalent to Rayleigh's lateral resolution)\n    \n    Returns\n    -------\n    float\n        The `BackProjectedPinholeRadius` divided by the `AiryDiskRadius`\n    \n    Examples\n    --------\n    >>> confocality(0.25, 0.208)\n    1.2\n    >>> confocality(1.25, 0.6)\n    2.1\n    \"\"\"\n    return BackProjectedPinholeRadius/AiryDiskRadius\n\ndef plotConfocalPSF(params):\n    \"\"\"\n    Returns the confocal PSF while plotting lateral and axial views.\n    \"\"\"\n    nz = params[\"nx\"]\n    \n    ConfocalPSF = psfm.confocal_psf(**params)\n    fig, (ax1, ax2) = plt.subplots(1, 2)\n    ax1.imshow(ConfocalPSF[nz//2], norm = PowerNorm(gamma=0.4))\n    ax2.imshow(ConfocalPSF[:,params[\"nx\"]//2], norm = PowerNorm(gamma=0.4))\n    \n    ax1.set_title(\"lateral\")\n    ax2.set_title(\"axial\")\n    \n    figtitle1 = \"NA:{} | pinhole_au:{} | em_wvl:{}\\n\".format(\n        params[\"NA\"],\n        round(params[\"pinhole_au\"], 2),\n        params[\"em_wvl\"],\n    )\n    figtitle2 = \"sample RI:{} | immersion medium RI:{}\\n\".format(\n        params[\"ns\"],\n        params[\"ni\"]\n    )\n    figtitle3 = \"depth:{} | model:{}\".format(\n        params[\"pz\"],\n        params[\"model\"],\n    )\n    \n    fig.suptitle(figtitle1 + figtitle2 + figtitle3\n        )\n    \n    return ConfocalPSF\n```\n:::\n\n\n### Optimal imaging with an oil immersion objective at the coverslip\n\nFirst, let's consider an optimal PSF where the location is right at the coverslip and the sample is mounted in an RI-matched solution.\n\n::: {.cell tags='[\"hide-input\"]' execution_count=2}\n``` {.python .cell-code}\nex_wvl = 0.488\nem_wvl = 0.509\npinhole_radius = 25\nmag_objective = 100\nNA = 1.49\npinhole_radius_BP = backProjectedPinholeRadius(pinhole_radius, mag_objective)\nairy_disk_radius = airyDiskRadius(em_wvl, NA)\n\npinhole_au = confocality(pinhole_radius_BP, airy_disk_radius)\n\noil_RI = 1.515\npz = 0\n\nX1Params_high_res_index_matched = {\n    \"nx\" : 51, # XY size of output PSF in pixels, must be odd\n    \"pz\" : pz,  # depth of point source relative to coverslip (um)\n    \"NA\" : NA, # numerical aperture\n    \"ti0\": 150,  # working distance of the objective (um)\n    \"ni\" : oil_RI, # immersion medium refractive index, experimental value\n    \"ni0\": oil_RI,  # immersion medium refractive index, design value\n    \"ex_wvl\" : ex_wvl, # excitation wavelength (um)\n    \"em_wvl\" : em_wvl, # emission wavelength (um)\n    \"ns\"   : oil_RI, # sample refractive index\n    \"pinhole_au\" : pinhole_au, # pinhole size (Airy units)\n    \"model\" : \"vectorial\",\n}\n\nPSF_fixed = plotConfocalPSF(X1Params_high_res_index_matched)\n```\n\n::: {.cell-output .cell-output-display}\n![](Spinning-Disk-Confocal-PSFs-with-psfmodels_files/figure-html/cell-3-output-1.png){width=566 height=393}\n:::\n:::\n\n\nNote the symmetrical nature of the axial view when things are optimal.\n\n### Imaging with an oil immersion objective, depth=2\nEven at a depth of 2 microns away from the coverslip, not much changes if the RI of the sample matches the RI of the immersion oil\n\n::: {.cell tags='[\"hide-input\"]' execution_count=3}\n``` {.python .cell-code}\nex_wvl = 0.488\nem_wvl = 0.509\npinhole_radius = 25\nmag_objective = 100\nNA = 1.49\npinhole_radius_BP = backProjectedPinholeRadius(pinhole_radius, mag_objective)\nairy_disk_radius = airyDiskRadius(em_wvl, NA)\n\npinhole_au = confocality(pinhole_radius_BP, airy_disk_radius)\n\noil_RI = 1.515\npz = 2\n\nX1Params_high_res_index_matched_2um = {\n    \"nx\" : 51, # XY size of output PSF in pixels, must be odd\n    \"pz\" : pz,  # depth of point source relative to coverslip (um)\n    \"NA\" : NA, # numerical aperture\n    \"ti0\": 150,  # working distance of the objective (um)\n    \"ni\" : oil_RI, # immersion medium refractive index, experimental value\n    \"ni0\": oil_RI,  # immersion medium refractive index, design value\n    \"ex_wvl\" : ex_wvl, # excitation wavelength (um)\n    \"em_wvl\" : em_wvl, # emission wavelength (um)\n    \"ns\"   : oil_RI, # sample refractive index\n    \"pinhole_au\" : pinhole_au, # pinhole size (Airy units)\n    \"model\" : \"vectorial\",\n}\n\nPSF_fixed_2um = plotConfocalPSF(X1Params_high_res_index_matched_2um)\n```\n\n::: {.cell-output .cell-output-display}\n![](Spinning-Disk-Confocal-PSFs-with-psfmodels_files/figure-html/cell-4-output-1.png){width=566 height=393}\n:::\n:::\n\n\n### Imaging in DMEM with an oil objective at depth = 0\nThen, let's consider a realistic example: live-cell imaging in DMEM\n\n::: {.cell tags='[\"hide-input\"]' execution_count=4}\n``` {.python .cell-code}\nex_wvl = 0.488\nem_wvl = 0.509\npinhole_radius = 25\nmag_objective = 100\nNA = 1.49\npinhole_radius_BP = backProjectedPinholeRadius(pinhole_radius, mag_objective)\nairy_disk_radius = airyDiskRadius(em_wvl, NA)\n\npinhole_au = confocality(pinhole_radius_BP, airy_disk_radius)\n\noil_RI = 1.515\nDMEM_RI = 1.34 # DMEM with 10% FBS\npz = 0\n\nX1Params_livecell = {\n    \"nx\" : 51, # XY size of output PSF in pixels, must be odd\n    \"pz\" : pz,  # depth of point source relative to coverslip (um)\n    \"NA\" : NA, # numerical aperture\n    \"ti0\": 150,  # working distance of the objective (um)\n    \"ni\" : oil_RI, # immersion medium refractive index, experimental value\n    \"ni0\": oil_RI,  # immersion medium refractive index, design value\n    \"ex_wvl\" : ex_wvl, # excitation wavelength (um)\n    \"em_wvl\" : em_wvl, # emission wavelength (um)\n    \"ns\"   : DMEM_RI, # sample refractive index\n    \"pinhole_au\" : pinhole_au, # pinhole size (Airy units)\n    \"model\" : \"vectorial\",\n}\n\n\nPSF_livecell = plotConfocalPSF(X1Params_livecell)\n```\n\n::: {.cell-output .cell-output-display}\n![](Spinning-Disk-Confocal-PSFs-with-psfmodels_files/figure-html/cell-5-output-1.png){width=566 height=393}\n:::\n:::\n\n\n### Imaging in DMEM with an oil objective at depth = 2\n\nAxial resolution will deteriorate as the focus position moves away from the coverslip.\n\nLet's consider imaging at a depth of two microns\n\n::: {.cell tags='[\"hide-input\"]' execution_count=5}\n``` {.python .cell-code}\nex_wvl = 0.488\nem_wvl = 0.509\npinhole_radius = 25\nmag_objective = 100\nNA = 1.49\npinhole_radius_BP = backProjectedPinholeRadius(pinhole_radius, mag_objective)\nairy_disk_radius = airyDiskRadius(em_wvl, NA)\n\npinhole_au = confocality(pinhole_radius_BP, airy_disk_radius)\n\noil_RI = 1.515\nDMEM_RI = 1.34 # DMEM with 10% FBS\npz = 2\n\nX1Params_livecell_2um = {\n    \"nx\" : 51, # XY size of output PSF in pixels, must be odd\n    \"pz\" : pz,  # depth of point source relative to coverslip (um)\n    \"NA\" : NA, # numerical aperture\n    \"ti0\": 150,  # working distance of the objective (um)\n    \"ni\" : oil_RI, # immersion medium refractive index, experimental value\n    \"ni0\": oil_RI,  # immersion medium refractive index, design value\n    \"ex_wvl\" : ex_wvl, # excitation wavelength (um)\n    \"em_wvl\" : em_wvl, # emission wavelength (um)\n    \"ns\"   : DMEM_RI, # sample refractive index\n    \"pinhole_au\" : pinhole_au, # pinhole size (Airy units)\n    \"model\" : \"vectorial\",\n}\n\n\nPSF_livecell_2um = plotConfocalPSF(X1Params_livecell_2um)\n```\n\n::: {.cell-output .cell-output-display}\n![](Spinning-Disk-Confocal-PSFs-with-psfmodels_files/figure-html/cell-6-output-1.png){width=566 height=393}\n:::\n:::\n\n\nNote how much worse the axial performance is from the spherical aberration induced by RI-mismatch between the sample and immersion oil!\n\n",
    "supporting": [
      "Spinning-Disk-Confocal-PSFs-with-psfmodels_files"
    ],
    "filters": [],
    "includes": {}
  }
}